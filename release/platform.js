// Generated by CoffeeScript 1.6.2
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['phaser'], function(Phaser) {
    var C, Collision, MicroPoint, Platform, State, Tilemap;

    Collision = Phaser.Collision;
    MicroPoint = Phaser.MicroPoint;
    State = Phaser.State;
    Tilemap = Phaser.Tilemap;
    Platform = (function(_super) {
      __extends(Platform, _super);

      Platform.prototype.minLedgeSize = 0;

      Platform.prototype.maxLedgeSize = 0;

      Platform.prototype.minLedgeSpacing = null;

      Platform.prototype.maxLedgeSpacing = null;

      Platform.prototype.ledgeThickness = 0;

      Platform.prototype.bounds = null;

      Platform.prototype.structureMode = 0;

      Platform.SIDE_TO_SIDE = 1;

      Platform.prototype.tilingMode = 0;

      Platform.prototype.tilingStart = 0;

      Platform.prototype.hasCeiling = false;

      Platform.prototype.hasFloor = false;

      Platform.prototype.startingPoint = null;

      Platform.prototype.endingPoint = null;

      Platform.prototype.distanceToTravel = null;

      Platform.prototype.delegate = null;

      Platform.prototype.ledges = null;

      Platform.prototype.ledgesRowCount = 0;

      Platform.EMPTY_TILE = '0';

      Platform.LEDGE_ROW = '1';

      Platform.META_TILE = '2';

      Platform.EMPTY_ROW = 0;

      Platform.LEDGE_ROW = 1;

      Platform.SOLID_ROW = 2;

      Platform._TOP_BOTTOM = 1;

      Platform._BOTTOM_TOP = 2;

      function Platform(game) {
        this.game = game;
        Platform.__super__.constructor.call(this, this.game);
        this.structureMode = C.SIDE_TO_SIDE;
        this.tilingStart = Collision.FLOOR;
        this.hasFloor = true;
        this.startingPoint = new MicroPoint();
        this.endingPoint = new MicroPoint();
        this.maxLedgeSpacing = new MicroPoint();
        this.minLedgeSpacing = new MicroPoint();
        this.ledges = [];
      }

      Platform.prototype.destroy = function() {
        return Platform.__super__.destroy.call(this);
      };

      Platform.prototype.numRows = function() {
        return Math.floor(this.bounds.height / this.tileHeight);
      };

      Platform.prototype.numCols = function() {
        return Math.floor(this.bounds.width / this.tileWidth);
      };

      Platform.prototype.initialize = function() {};

      Platform.prototype.generateData = function() {};

      Platform.prototype.makeMap = function() {};

      Platform.prototype.isAtEndingPoint = function(gObject) {};

      return Platform;

    })(Tilemap);
    return C = Platform;
  });

}).call(this);
